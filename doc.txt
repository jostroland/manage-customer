spring:
#PROFILS
  profiles:
    active: ${ACTIVE_PROFILE:dev}
  config:
    import: optional:file:.env.${ACTIVE_PROFILE:dev} #import: optional:file:.env[.properties]
#DATASOURCE
  datasource:
    url: jdbc:postgresql://${POSTGRES_SQL_HOST}:${POSTGRES_SQL_PORT}/${POSTGRES_SQL_DATABASE}
    username: ${POSTGRES_SQL_USERNAME}
    password: ${POSTGRES_SQL_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect


logging:
  level:
    root: INFO

#PROBLEM DETAILS
  mvc:
    problemdetails:
      enabled: true

#MANAGEMENT ACTUATOR
#management:
#  endpoints:
#    health:
#      show-details: always
#    web:
#      exposure:
#        include:

#SWAGGER
tansu:
  openapi:
    dev-url: http://localhost:${SERVER_PORT:8080}
    prod-url: http://tansu-api:8090

#logging:
  #config: classpath:logback-spring.xml

#SERVER WEB
server:
  port: ${SERVER_PORT:8080}
  error:
    path: /customer/error



#spring.security.user.name=saurav
#spring.security.user.password=admin